// <auto-generated />
using System;
using Infrastructure.API.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ImageCategory")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<string>("NameCategory")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.Property<int>("CiClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddessClient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CiUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBirthClient")
                        .HasMaxLength(10)
                        .HasColumnType("date");

                    b.Property<string>("DisplayNameClient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmailClient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordClient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneClient")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("PictureClient")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("CiClient");

                    b.HasIndex("CiUser");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CantProduct")
                        .HasColumnType("int");

                    b.Property<int>("CiClient")
                        .HasColumnType("int");

                    b.Property<double>("DeliveryPrice")
                        .HasColumnType("float");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<double>("PriceOrder")
                        .HasColumnType("float");

                    b.Property<int?>("SaleIdSales")
                        .HasColumnType("int");

                    b.Property<string>("StatusOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOrder");

                    b.HasIndex("CiClient");

                    b.HasIndex("SaleIdSales");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryIdCategory")
                        .HasColumnType("int");

                    b.Property<int>("CiUser")
                        .HasColumnType("int");

                    b.Property<string>("DetailProduct")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImageProduct")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("PriceProduct")
                        .HasColumnType("float");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("SalesProduct")
                        .HasColumnType("int");

                    b.Property<int>("StateProduct")
                        .HasColumnType("int");

                    b.Property<int>("StockProduct")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryIdCategory");

                    b.HasIndex("CiUser");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Domain.Entities.Sales", b =>
                {
                    b.Property<int>("IdSales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CiClient")
                        .HasColumnType("int");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdPaymentSale")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("PriceDelivery")
                        .HasColumnType("float");

                    b.Property<double>("PriceSale")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdSales");

                    b.HasIndex("CiClient");

                    b.HasIndex("IdOrder");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("CiUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddessUser")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateBirthUser")
                        .HasMaxLength(10)
                        .HasColumnType("date");

                    b.Property<string>("DisplaynameUser")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("EmailUser")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordUser")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneUser")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("PictureUser")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("CiUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersIdOrder")
                        .HasColumnType("int");

                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.HasKey("OrdersIdOrder", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("ProductProveedor", b =>
                {
                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProveedoresProveedorId")
                        .HasColumnType("int");

                    b.HasKey("ProductsProductId", "ProveedoresProveedorId");

                    b.HasIndex("ProveedoresProveedorId");

                    b.ToTable("ProductProveedor");
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Clients")
                        .HasForeignKey("CiUser")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.HasOne("Domain.Entities.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("CiClient");

                    b.HasOne("Domain.Entities.Sales", "Sale")
                        .WithMany()
                        .HasForeignKey("SaleIdSales");

                    b.Navigation("Client");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryIdCategory");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("CiUser");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Sales", b =>
                {
                    b.HasOne("Domain.Entities.Client", "Client")
                        .WithMany("Sales")
                        .HasForeignKey("CiClient")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.Order", "Order")
                        .WithMany("Sales")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Client");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Domain.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersIdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductProveedor", b =>
                {
                    b.HasOne("Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("ProveedoresProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
